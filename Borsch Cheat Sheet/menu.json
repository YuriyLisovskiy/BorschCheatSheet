{
  "title": "Borsch",
  "sections": [
    {
      "title": "СТАНДАРТНА БІБЛІОТЕКА",
      "items": [
        {
          "submenu": {
            "title": "Колекції",
            "items": [
              {
                "source": {
                  "filename": "Стек.борщ",
                  "readonly": false,
                  "code": "__експортовані__ = [\"Стек\"];\n\n/**\n Стек — це лінійна структура даних, яка зберігає елементи\n за принципом \"останній прийшов/перший вийшов\". Новий елемент\n у стек додають з одного кінця, а видаляють з іншого.\n*/\nклас Стек\n\n    __документ__ = \"\";\n\n    функція __конструктор__(я: Стек)\n        я._список = [];\n    кінець;\n\n    функція __довжина__(я: Стек): ціле\n        повернути я.розмір();\n    кінець;\n\n    функція __рядок__(я: Стек): рядок\n        повернути рядок(я._список);\n    кінець;\n\n    /**\n     Часова складність: O(1)\n    */\n    функція порожній(я: Стек): логічне\n        повернути я.розмір() == 0;\n    кінець;\n\n    /**\n     Часова складність: O(1)\n    */\n    функція розмір(я: Стек): ціле\n        повернути довжина(я._список);\n    кінець;\n\n    /**\n     Повертає верхній елемент стеку.\n\n     Часова складність: O(1)\n    */\n    функція вершина(я: Стек): довільний\n        якщо (я.порожній())\n            панікувати Помилка(\"стек порожній\");\n        кінець;\n\n        повернути я._список[-1];\n    кінець;\n\n    /**\n     Вставляє елемент у верхню частину стеку.\n\n     Часова складність: O(1)\n    */\n    функція додати(я: Стек, елемент: довільний)\n        я._список = додати(я._список, елемент);\n        повернути нуль;\n    кінець;\n\n    /**\n     Видаляє верхній елемент стеку.\n\n     Часова складність: O(1)\n    */\n    функція вилучити(я: Стек): довільний\n        елемент = я.вершина();\n        я._список = я._список[0:-1];\n        повернути елемент;\n    кінець;\n\nкінець;\n"
                }
              },
              {
                "source": {
                  "filename": "Стек.борщ (readonly)",
                  "readonly": true,
                  "code": "__експортовані__ = [\"Стек\"];\n\n/**\n Стек — це лінійна структура даних, яка зберігає елементи\n за принципом \"останній прийшов/перший вийшов\". Новий елемент\n у стек додають з одного кінця, а видаляють з іншого.\n*/\nклас Стек\n\n    __документ__ = \"\";\n\n    функція __конструктор__(я: Стек)\n        я._список = [];\n    кінець;\n\n    функція __довжина__(я: Стек): ціле\n        повернути я.розмір();\n    кінець;\n\n    функція __рядок__(я: Стек): рядок\n        повернути рядок(я._список);\n    кінець;\n\n    /**\n     Часова складність: O(1)\n    */\n    функція порожній(я: Стек): логічне\n        повернути я.розмір() == 0;\n    кінець;\n\n    /**\n     Часова складність: O(1)\n    */\n    функція розмір(я: Стек): ціле\n        повернути довжина(я._список);\n    кінець;\n\n    /**\n     Повертає верхній елемент стеку.\n\n     Часова складність: O(1)\n    */\n    функція вершина(я: Стек): довільний\n        якщо (я.порожній())\n            панікувати Помилка(\"стек порожній\");\n        кінець;\n\n        повернути я._список[-1];\n    кінець;\n\n    /**\n     Вставляє елемент у верхню частину стеку.\n\n     Часова складність: O(1)\n    */\n    функція додати(я: Стек, елемент: довільний)\n        я._список = додати(я._список, елемент);\n        повернути нуль;\n    кінець;\n\n    /**\n     Видаляє верхній елемент стеку.\n\n     Часова складність: O(1)\n    */\n    функція вилучити(я: Стек): довільний\n        елемент = я.вершина();\n        я._список = я._список[0:-1];\n        повернути елемент;\n    кінець;\n\nкінець;\n"
                }
              }
            ]
          }
        }
      ]
    }
  ]
}
